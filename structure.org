Plot behind the unit testing talk

* Python is very dynamic

** no help from the compiler

** very bad errors coming only at runtime

*** examples of bad function definitions

* Functions

** Pure functions

** Side effect, example of why they are bad

** Test pure functions (with a simple module)

* Testing

** Unit testing, integration testing, functional testing

** TDD and test first development

*** How to write code

* unittest

** Setup / teardown

** Test discovery

** coverage

** nose + coverage

* Mock library

** Testing side effect functions

* Conclusions

** Avoid side effect whenever possible

** Build your programs bottom-up, composing small functions

** Before writing the code, think how you could test it

