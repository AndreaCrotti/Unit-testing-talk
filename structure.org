Plot behind the unit testing talk

* Python is very dynamic

** No help from the compiler

** Very bad errors coming only at runtime

   examples of functions that fail miserably only at runtime

** We need to test our code even harder

* Functions

** Pure functions

** Side effects, and why they are bad

** Test pure functions (with a simple module)

* Testing

** Unit testing, integration testing, functional testing

** TDD and test first development

** Examples and demo about TDD

** Regression testing

** Remove the fear of touching code

** Testing as documentation, show how to use

* unittest libraries

** Setup / Teardown

** Test discovery

** Coverage

** Nose + coverage

* Mock library

** Python dynamic binding and by-hand examples

** Testing side effect functions

* Conclusions

** Avoid side effect whenever possible

** Build your programs bottom-up, composing small functions

** Before writing the code, think how you could test it

